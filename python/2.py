import random
import sys

def rn():  # Функция для генерации случайного числа
    return random.randint(100, 999)  # Возврат случайного числа от 100 до 999

def main():
    wind_count = int(input("Введите количество окон\n"))  # Переменная для хранения количества окон
    talon = ""  # Переменная для хранения номера талона

    windows_queue = [[] for _ in range(wind_count)]  # Вектор для хранения очередей клиентов в окнах
    time_in = [0] * wind_count  # Вектор для хранения времени входа клиентов в окна
    people = []  # Вектор для хранения пар (номер талона, время обслуживания)
    talons = set()  # Множество для хранения номеров талонов

    while True:  # Бесконечный цикл для обработки команд пользователя
        input_str = input()  # Чтение ввода пользователя

        if input_str == "DISTRIBUTE":  # Проверка на команду распределения клиентов между окнами
            people.sort(key=lambda x: x[1], reverse=True)  # Сортировка клиентов по времени обслуживания

            for person in people:  # Распределение клиентов между окнами
                min_time = min(time_in)  # Инициализация минимального времени входа
                indexx = time_in.index(min_time)  # Инициализация индекса окна с минимальным временем входа
                windows_queue[indexx].append(person[0])  # Добавление клиента в очередь окна
                time_in[indexx] += person[1]  # Увеличение времени входа для окна

            for i, window in enumerate(windows_queue):  # Вывод информации о заполненности очередей и времени входа для каждого окна
                print(f"Окно {i + 1} ({time_in[i]} минут):", end=" ")
                for talon in window:
                    print(f'T{talon}', end=' ')
                print()
            break  # Выход из цикла после распределения клиентов

        elif input_str == "ENQUEUE":  # Проверка на команду добавления клиента в очередь
            time = int(input())  # Чтение времени обслуживания из ввода
            talon = rn()  # Генерация случайного номера талона
            while talon in talons:  # Генерация уникального номера талона
                talon = rn()  # Генерация случайного номера талона
            talons.add(talon)  # Добавление номера талона в множество
            print(f'T{talon}')  # Вывод номера талона
            people.append((talon, time))  # Добавление клиента в вектор клиентов

        else:
            print("Неизвестная команда")  # Вывод сообщения об ошибке для неизвестных команд

if __name__ == "__main__":
    main()